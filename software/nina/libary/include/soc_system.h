#ifndef _ALTERA_SOC_SYSTEM_H_
#define _ALTERA_SOC_SYSTEM_H_

/*
 * This file was automatically generated by the swinfo2header utility.
 *
 * Created from SOPC Builder system 'soc_system' in
 * file 'soc_system.sopcinfo'.
 */

/*
 * This file contains macros for module 'hps_0' and devices
 * connected to the following master:
 *   h2f_lw_axi_master
 *
 * Do not include this header file and another header file created for a
 * different module or master group at the same time.
 * Doing so may result in duplicate macro names.
 * Instead, use the system header file which has macros with unique names.
 */

/*
 * Macros for device 'id_switch_0', class 'id_switch'
 * The macros are prefixed with 'ID_SWITCH_0_'.
 * The prefix is the slave descriptor.
 */
#define ID_SWITCH_0_COMPONENT_TYPE id_switch
#define ID_SWITCH_0_COMPONENT_NAME id_switch_0
#define ID_SWITCH_0_BASE 0x0
#define ID_SWITCH_0_SPAN 262144
#define ID_SWITCH_0_END 0x3ffff

/*
 * Macros for device 'ptp_simple_us_0', class 'ptp_simple_us'
 * The macros are prefixed with 'PTP_SIMPLE_US_0_'.
 * The prefix is the slave descriptor.
 */
#define PTP_SIMPLE_US_0_COMPONENT_TYPE ptp_simple_us
#define PTP_SIMPLE_US_0_COMPONENT_NAME ptp_simple_us_0
#define PTP_SIMPLE_US_0_BASE 0x40000
#define PTP_SIMPLE_US_0_SPAN 262144
#define PTP_SIMPLE_US_0_END 0x7ffff

/*
 * Macros for device 'realtime_clock_controll_0', class 'realtime_clock_controll'
 * The macros are prefixed with 'REALTIME_CLOCK_CONTROLL_0_'.
 * The prefix is the slave descriptor.
 */
#define REALTIME_CLOCK_CONTROLL_0_COMPONENT_TYPE realtime_clock_controll
#define REALTIME_CLOCK_CONTROLL_0_COMPONENT_NAME realtime_clock_controll_0
#define REALTIME_CLOCK_CONTROLL_0_BASE 0x80000
#define REALTIME_CLOCK_CONTROLL_0_SPAN 262144
#define REALTIME_CLOCK_CONTROLL_0_END 0xbffff

/*
 * Macros for device 'piezo_controller_0', class 'piezo_controller'
 * The macros are prefixed with 'PIEZO_CONTROLLER_0_'.
 * The prefix is the slave descriptor.
 */
#define PIEZO_CONTROLLER_0_COMPONENT_TYPE piezo_controller
#define PIEZO_CONTROLLER_0_COMPONENT_NAME piezo_controller_0
#define PIEZO_CONTROLLER_0_BASE 0xc0000
#define PIEZO_CONTROLLER_0_SPAN 512
#define PIEZO_CONTROLLER_0_END 0xc01ff
#define PIEZO_CONTROLLER_0_ENABLE_REG_OFST 0x0
#define PIEZO_CONTROLLER_0_PERIOD_REG_OFST 0x2
#define PIEZO_CONTROLLER_0_PHASE_A_COUNT_REG_OFST 0x4
#define PIEZO_CONTROLLER_0_PHASE_A_REG_OFST 0x20
#define PIEZO_CONTROLLER_0_PHASE_B_COUNT_REG_OFST 0x6
#define PIEZO_CONTROLLER_0_PHASE_B_REG_OFST 0x110
#define PIEZO_CONTROLLER_0_FREQ 50000000
/*
 * Macros for device 'fpga_led', class 'altera_avalon_pio'
 * The macros are prefixed with 'FPGA_LED_'.
 * The prefix is the slave descriptor.
 */
#define FPGA_LED_COMPONENT_TYPE altera_avalon_pio
#define FPGA_LED_COMPONENT_NAME fpga_led
#define FPGA_LED_BASE 0xc0200
#define FPGA_LED_SPAN 32
#define FPGA_LED_END 0xc021f
#define FPGA_LED_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_LED_BIT_MODIFYING_OUTPUT_REGISTER 1
#define FPGA_LED_CAPTURE 0
#define FPGA_LED_DATA_WIDTH 8
#define FPGA_LED_DO_TEST_BENCH_WIRING 0
#define FPGA_LED_DRIVEN_SIM_VALUE 0
#define FPGA_LED_EDGE_TYPE NONE
#define FPGA_LED_FREQ 50000000
#define FPGA_LED_HAS_IN 0
#define FPGA_LED_HAS_OUT 1
#define FPGA_LED_HAS_TRI 0
#define FPGA_LED_IRQ_TYPE NONE
#define FPGA_LED_RESET_VALUE 0

/*
 * Macros for device 'fpga_key', class 'altera_avalon_pio'
 * The macros are prefixed with 'FPGA_KEY_'.
 * The prefix is the slave descriptor.
 */
#define FPGA_KEY_COMPONENT_TYPE altera_avalon_pio
#define FPGA_KEY_COMPONENT_NAME fpga_key
#define FPGA_KEY_BASE 0xc0220
#define FPGA_KEY_SPAN 16
#define FPGA_KEY_END 0xc022f
#define FPGA_KEY_IRQ 0
#define FPGA_KEY_BIT_CLEARING_EDGE_REGISTER 1
#define FPGA_KEY_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_KEY_CAPTURE 1
#define FPGA_KEY_DATA_WIDTH 2
#define FPGA_KEY_DO_TEST_BENCH_WIRING 0
#define FPGA_KEY_DRIVEN_SIM_VALUE 0
#define FPGA_KEY_EDGE_TYPE FALLING
#define FPGA_KEY_FREQ 50000000
#define FPGA_KEY_HAS_IN 1
#define FPGA_KEY_HAS_OUT 0
#define FPGA_KEY_HAS_TRI 0
#define FPGA_KEY_IRQ_TYPE EDGE
#define FPGA_KEY_RESET_VALUE 0


#endif /* _ALTERA_SOC_SYSTEM_H_ */
